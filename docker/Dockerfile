FROM ubuntu:20.04

ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update && apt-get install -y \
    software-properties-common && \
    rm -rf /var/lib/apt/lists/*
RUN add-apt-repository ppa:deadsnakes/ppa

# Set up Python
RUN apt-get update && apt-get install -y \
    apt-transport-https \
    iputils-ping \
    git \
    curl \
    build-essential \
    cmake \
    libhdf5-dev \
    swig \
    wget \
    python3.8 \
    python3.8-venv \
    python3.8-dev \
    python3-pip \
    python3-software-properties

RUN curl https://bootstrap.pypa.io/get-pip.py | python3.8

# Without this Python thinks we're ASCII and unicode chars fail
ENV LANG C.UTF-8

RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 1
RUN update-alternatives --install /usr/bin/python python /usr/bin/python3.8 1

# Install Rust for building tokenizers on Mac
RUN curl https://sh.rustup.rs -sSf | sh -s -- -y
ENV PATH="/root/.cargo/bin:${PATH}"



# STEP 1: Install TensorBoard separately to prevent conflicts
RUN pip3 install --no-cache-dir tensorboard==2.5.0 tensorboard-data-server==0.6.1 tensorboard-plugin-wit==1.8.0

# STEP 2: Install all other libraries (without TensorBoard)
# updated tokenizers, transformers, and huggingface-hub for M1 Mac
# need torch 1.12 for mps
RUN pip3 install -U --no-cache-dir \
    absl-py==0.12.0 \
    cachetools==4.2.2 \
    certifi==2020.12.5 \
    chardet==4.0.0 \
    click==8.0.1 \
    cycler==0.10.0 \
    filelock==3.0.12 \
    google-auth==1.30.0 \
    google-auth-oauthlib==0.4.4 \
    grpcio==1.37.1 \
    huggingface-hub==0.16.4 \
    idna==2.10 \
    joblib==1.0.1 \
    kiwisolver==1.3.1 \
    Markdown==3.3.4 \
    matplotlib==3.4.2 \
    moverscore==1.0.3 \
    nltk==3.6.7 \
    oauthlib==3.1.0 \
    packaging==21.0 \
    Pillow==8.3.0 \
    portalocker==2.3.0 \
    protobuf==3.17.0 \
    pyasn1==0.4.8 \
    pyasn1-modules==0.2.8 \
    pyemd \
    pyparsing==2.4.7 \
    python-dateutil==2.8.1 \
    PyYAML==5.4.1 \
    regex==2022.1.18 \
    requests==2.25.1 \
    requests-oauthlib==1.3.0 \
    rsa==4.7.2 \
    sacremoses==0.0.45 \
    sentencepiece==0.1.96 \
    six==1.16.0 \
    tokenizers==0.13.3 \
    torch==1.12.1 \
    tqdm==4.60.0 \
    transformers==4.30.2 \
    typing==3.7.4.3 \
    typing-extensions==3.10.0.0 \
    urllib3==1.26.4 \
    Werkzeug==2.0.1

# STEP 3: Manually Force NumPy Downgrade (Ensures No Conflicts) 
# Upgraded from 1.19.5 to 1.24.4 for M1 Metal torch compatability 
RUN pip3 install --no-cache-dir --force-reinstall numpy==1.24.4 

## need on Mac
RUN pip3 install scikit-optimize 

# STEP 4: Patch moverscore_v2 to allow GPU usage
# If you want to force CPU instead, uncomment this line
RUN find . -type f -name moverscore_v2.py -exec sed -i 's/cuda:0/cpu/g' {} \;

RUN find . -type f -name moverscore_v2.py -exec sed -i '2 i\import os' {} \;
RUN find . -type f -name moverscore_v2.py -exec sed -i "s/model_name = 'distilbert-base-uncased'/model_name = os.environ.get('MOVERSCORE_MODEL', 'distilbert-base-uncased')/g" {} \;

# STEP 5: Download nltk dataset
RUN python3 -c "import nltk; nltk.download('punkt');"

# STEP 6: prevents PyTorch from attempting to load the GPU when running moverscore_v2 inside docker build. test the import later
# RUN python3 -c "import os; os.environ['MOVERSCORE_MODEL'] = 'distilbert-base-multilingual-cased' ; import moverscore_v2"
